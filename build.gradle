
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	//id 'com.ewerk.gradle.plugins.querydsl' version "1.0.10"
}

/*
def querydslSrcDir = 'src/main/generated' // QClass 생성 위치

querydsl {
	jpa = true
	querydslSourcesDir = querydslSrcDir
}

sourceSets {
	main.java.srcDirs querydslSrcDir
}

configurations {
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

 */
group = 'daily-mission-project'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'

	//Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	//QueryDsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//Spring-batch
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	//scheduler
	implementation 'org.springframework.boot:spring-boot-starter-quartz'

	//Security && oauth2
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-oauth2-client'
	//compileOnly('org.springframework.boot:spring-boot-starter-security')

	//JSON Serialize, Deserialize
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	//JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	//AWS S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	implementation'org.mariadb.jdbc:mariadb-java-client'
	implementation 'org.springframework.session:spring-session-jdbc'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.mockito:mockito-core:4.8.0'
	testImplementation 'org.mockito:mockito-inline:2.13.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testImplementation("com.h2database:h2:2.1.214")
}

tasks.withType(JavaCompile).configureEach {
	options.compilerArgs.add("-parameters")
}

tasks.named('test') {
	useJUnitPlatform()
}
