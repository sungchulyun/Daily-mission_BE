name: CI - Java Gradle Workflow

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
      checks: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3.1.0

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Unit Test with Gradle
        run: |
          touch ./src/main/resources/application-test.properties
          echo "${{ secrets.UNIT_TEST_APPLICATION }}" > ./src/main/resources/application-unit-test.properties
          ./gradlew --info unitTest -Dspring.config.location=classpath:/application-unit-test.properties

      - name: Integration Test with Gradle
        run: |
          touch ./src/main/resources/application-integration-test.properties
          echo "${{ secrets.INTEGRATION_TEST_APPLICATION }}" > ./src/main/resources/application-integration-test.properties
          ./gradlew --info integrationTest -Dspring.config.location=classpath:/application-integration-test.properties

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ always() }}
        with:
          files: build/test-results/unit-tests/**/*.xml
          check_name: Unit Test

      - name: Publish Integration Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ always() }}
        with:
          files: build/test-results/integration-tests/**/*.xml
          check_name: Integration Test

      - name: Gradle Build
        uses: gradle/gradle-build-action@v2.6.0
        with:
          arguments: clean build
