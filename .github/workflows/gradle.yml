name: Java CI/CD with Gradle

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build-and-test:
    if: github.event_name == 'pull_request'  # Pull Request 시에만 빌드 및 테스트 수행
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
      checks: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
        
      - name: Make application.properties
        run: |
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.APPLICATION }}" > ./application.properties

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Test with Gradle
        run: |
          touch ./src/main/resources/application-test.properties
          echo "${{ secrets.TEST_APPLICATION }}" > ./src/main/resources/application-test.properties
          ./gradlew --info test -Dspring.config.location=classpath:/application-test.properties

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ always() }}
        with:
          files: build/test-results/**/*.xml

  deploy:
    if: github.event_name == 'push'  # Push 후 CD 작업 수행
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make application.properties
        run: |
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.APPLICATION }}" > ./application.properties

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5

      - name: Gradle Build Action
        uses: gradle/gradle-build-action@v2.6.0
        with:
          arguments: clean build

      - name: Docker Login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        
      - name: Build and push Docker images
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/spring-boot-server

      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/spring-boot-server
            docker stop $(docker ps -a -q)
            docker run -d --log-driver=syslog -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/spring-boot-server
            docker run -p 6379:6379 --name redis -d redis:latest
            docker rm $(docker ps --filter 'status=exited' -a -q)
            docker image prune -a -f

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5
